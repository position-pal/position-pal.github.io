<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PositionPal</title><link>https://position-pal.github.io/</link><description>Recent content on PositionPal</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://position-pal.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://position-pal.github.io/docs/1-introduction/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://position-pal.github.io/docs/1-introduction/introduction/</guid><description>&lt;br>
&lt;h2 id="what-is-positionpal">What is PositionPal? &lt;a href="#what-is-positionpal" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>PositionPal is a &lt;strong>micro-services-based&lt;/strong> application for creating &lt;strong>groups&lt;/strong> of &lt;strong>trusted&lt;/strong> users with whom to &lt;strong>share location&lt;/strong>, &lt;strong>routes&lt;/strong>, and &lt;strong>notify of dangerous or emergency situation&lt;/strong> to create an &lt;em>effective&lt;/em> and &lt;em>timely&lt;/em> service and &lt;em>support network&lt;/em>.&lt;/p>
&lt;p>The idea comes from &lt;a href="https://www.open.online/2024/04/04/scrivi-quando-arrivi-gruppo-whatsapp-ragazze/" rel="external" target="_blank">some news&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> read recently about young people who, on their way home at night in unsafe areas of the city, share their location in a WhatsApp group of users to support and watch each other.&lt;/p></description></item><item><title>Functional Requirements</title><link>https://position-pal.github.io/docs/2-domain-analysis/1-functional-requirements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://position-pal.github.io/docs/2-domain-analysis/1-functional-requirements/</guid><description>&lt;p>In this section are collected the &lt;strong>functional requirements&lt;/strong> of the system in the form of &lt;em>User Stories&lt;/em>.&lt;/p>
&lt;h2 id="user-stories">User Stories &lt;a href="#user-stories" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="users-management">Users Management &lt;a href="#users-management" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;em>
&lt;ol>
&lt;li>
&lt;p>As a new user &lt;br>
I want to register with the system using my details &lt;br>
So that I can access the application&amp;rsquo;s features&lt;/p>
&lt;/li>
&lt;li>
&lt;p>As a registered user &lt;br>
I want to log in with my credentials &lt;br>
So that I can access my account and use the application&lt;/p>
&lt;/li>
&lt;li>
&lt;p>As a logged user &lt;br>
I want to update my profile information &lt;br>
So that I can keep my personal details current&lt;/p></description></item><item><title>Business Requirements</title><link>https://position-pal.github.io/docs/2-domain-analysis/2-business-requirements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://position-pal.github.io/docs/2-domain-analysis/2-business-requirements/</guid><description>&lt;h2 id="glossary">Glossary &lt;a href="#glossary" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>??&lt;/p>
&lt;h2 id="use-cases">Use cases &lt;a href="#use-cases" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="location-tracking">Location Tracking &lt;a href="#location-tracking" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;div style="width: 100%; overflow-x: auto; white-space: nowrap;">
 &lt;img 
 src="https://position-pal.github.io/res/tracking-use-cases-light.svg" 
 alt="tracking-use-cases schema" 
 style="max-width: 1100px;"
 class="schema"
 />
&lt;/div>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Start Location Sharing&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Actor&lt;/strong>: Group member&lt;/li>
&lt;li>&lt;strong>Description&lt;/strong>: The user starts sharing their location with members of one or more groups.&lt;/li>
&lt;li>&lt;strong>Preconditions&lt;/strong>:
&lt;ul>
&lt;li>The user is logged and is a member of the group they want to share their location with.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Main Scenario&lt;/strong>:
&lt;ol>
&lt;li>The user selects the group they want to share their location with;&lt;/li>
&lt;li>The user starts sharing their location with members of that group;&lt;/li>
&lt;li>A visual feedback is sent to the user notifying them the location sharing has started.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>&lt;strong>Postcondition&lt;/strong>: The user&amp;rsquo;s location is shared with the selected group members.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Stop Location Sharing&lt;/strong>&lt;/p></description></item><item><title>Quality Attributes</title><link>https://position-pal.github.io/docs/2-domain-analysis/3-quality-attributes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://position-pal.github.io/docs/2-domain-analysis/3-quality-attributes/</guid><description>&lt;p>&lt;em>Quality Attributes&lt;/em> (&lt;em>QA&lt;/em>), also known as &lt;em>Non-Functional Requirements&lt;/em> (&lt;em>NFR&lt;/em>), are measurable properties of a system that describe its qualities and indicate how well it satisfies the needs of its stakeholders beyond the functional requirements.&lt;/p>
&lt;p>These attributes play a crucial role in shaping the system architecture, as they influence design decisions, trade-offs, and the selection of appropriate technologies and patterns.&lt;/p>
&lt;p>In the context of this project have been identified the following quality attributes that are considered essential for the success of system, divided into &amp;ldquo;Runtime&amp;rdquo; and &amp;ldquo;Development Time&amp;rdquo; categories:&lt;/p></description></item><item><title>Event Storming</title><link>https://position-pal.github.io/docs/2-domain-analysis/4-event-storming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://position-pal.github.io/docs/2-domain-analysis/4-event-storming/</guid><description>&lt;p>In order to extract the main functionality of the application as quickly and effectively as possible, &lt;strong>Event Storming&lt;/strong>, a collaborative and visual modeling technique particularly used and valued in the agile and Domain-Driven development context, was used.&lt;/p>
&lt;p>Its power comes from a heterogeneous, multidisciplinary group of experts, from architects to product owners, via UI/UX designers to testers, who, together, collaborate to extract key features and the processes that drive them, sharing this knowledge so that it is shared beyond the compartments of each team.
Moreover, this approach allows for uniformity in the language used (the &lt;em>ubiquitous language&lt;/em>) and for raising and then resolving any ambiguities or misunderstandings that may arise early in the project.&lt;/p></description></item><item><title>Bounded Contexts</title><link>https://position-pal.github.io/docs/3-arch-design/1-bounded-contexts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://position-pal.github.io/docs/3-arch-design/1-bounded-contexts/</guid><description>&lt;p>Following the event storming session, the subsequent bounded contexts have been identified:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Users Management&lt;/strong>: it is responsible for managing the users&amp;rsquo; lifecycle, from registration to deletion and the management of their profile information along with the authentication and authorization.&lt;/li>
&lt;li>&lt;strong>Groups Management&lt;/strong>: it is responsible for managing the groups&amp;rsquo; lifecycle, from creation to deletion, and the management of the group&amp;rsquo;s members.&lt;/li>
&lt;li>&lt;strong>Location Tracking&lt;/strong>: it is responsible for managing the location tracking of the users, including the sharing of the location with groups&amp;rsquo; members, the reception of location updates, thw sending of SOS alerts and the management of their paths.&lt;/li>
&lt;li>&lt;strong>Notifications&lt;/strong>: it is responsible for managing the notifications, including the push notifications to the users&amp;rsquo; devices.&lt;/li>
&lt;li>&lt;strong>Chat&lt;/strong>: it is responsible for managing the chat between the users and the groups&amp;rsquo; members.&lt;/li>
&lt;/ul>
&lt;p>In the following sections, we will provide a detailed view of each bounded context, including its &lt;strong>&lt;em>Ubiquitous Language&lt;/em>&lt;/strong>, the &lt;strong>&lt;em>Commands&lt;/em>&lt;/strong> and the &lt;strong>&lt;em>Events&lt;/em>&lt;/strong> guiding the interactions between the different contexts.
These can be categorized as &lt;strong>&lt;em>Driving&lt;/em>&lt;/strong> or &lt;strong>&lt;em>Driven Events&lt;/em>&lt;/strong>: the former are the events triggered by the user&amp;rsquo;s actions and that drives an application use case, while the latter are the events that are triggered by the system as a reaction to a use case or a system state change.
Moreover we distinguish between &lt;em>Commands&lt;/em> and &lt;em>Events&lt;/em> to highlight the difference between a request to perform an action (&lt;em>Command&lt;/em>) and the notification of something meaningful that has happened (&lt;em>Event&lt;/em>):&lt;/p></description></item><item><title>Architecture Design</title><link>https://position-pal.github.io/docs/3-arch-design/2-architecture-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://position-pal.github.io/docs/3-arch-design/2-architecture-design/</guid><description>&lt;p>The chosen architectural style for the system is the &lt;strong>Microservices Architecture&lt;/strong>.&lt;/p>
&lt;p>&lt;code>TODO: why, advantages&lt;/code>&lt;/p>
&lt;h2 id="microservices-decomposition">Microservices Decomposition &lt;a href="#microservices-decomposition" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Following the &lt;em>decompose by subdomain strategy&lt;/em> the following microservices have been identified:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>User Service&lt;/strong>: responsible for managing the user account data and the groups of the system;&lt;/li>
&lt;li>&lt;strong>Location Service&lt;/strong>: responsible for managing the location and the user tracking;&lt;/li>
&lt;li>&lt;strong>Notification Service&lt;/strong>: responsible for managing the notifications;&lt;/li>
&lt;li>&lt;strong>Chat Service&lt;/strong>: responsible for managing the chat messages.&lt;/li>
&lt;/ul>
&lt;p>It should be noted that in the &lt;em>User Service&lt;/em> we have joined together the Users and Groups bounded context.
This is because one can see the close interaction between these two domain entities in addition to respecting properties such as the &amp;ldquo;Common Closure Principle&amp;rdquo; (package components that change for the same reason are located into the same service), ensuring data consistency and mitigate Network latency:&lt;/p></description></item><item><title>Architectural Patterns</title><link>https://position-pal.github.io/docs/3-arch-design/4-patterns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://position-pal.github.io/docs/3-arch-design/4-patterns/</guid><description>&lt;h2 id="api-gateway">API Gateway &lt;a href="#api-gateway" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h2 id="event-sourcing">Event Sourcing &lt;a href="#event-sourcing" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h2 id="json-web-token-jwt">JSON Web Token (JWT) &lt;a href="#json-web-token-jwt" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h2 id="cqrs-forse">CQRS forse? &lt;a href="#cqrs-forse" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h2 id="deployment">Deployment? &lt;a href="#deployment" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2></description></item><item><title>Shared Kernel design</title><link>https://position-pal.github.io/docs/4-detailed-design/1-shared-kernel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://position-pal.github.io/docs/4-detailed-design/1-shared-kernel/</guid><description>&lt;h2 id="structure">Structure &lt;a href="#structure" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;div style="width: 100%; overflow-x: auto; white-space: nowrap;">
 &lt;img 
 src="https://position-pal.github.io/res/shared-kernel-structure-light.svg" 
 alt="shared-kernel-structure schema" 
 style="max-width: 1100px;"
 class="schema"
 />
&lt;/div></description></item><item><title>Location Service design</title><link>https://position-pal.github.io/docs/4-detailed-design/2-location-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://position-pal.github.io/docs/4-detailed-design/2-location-service/</guid><description>&lt;!--This chapter explains the strategies used to meet the requirements identified in the analysis.-->
&lt;p>In this chapter, we present the abstract design of the &lt;strong>Location Service&lt;/strong>.
As per best practices, the design is based on the &lt;strong>Domain-Driven Design&lt;/strong> principles, and is presented in terms of the main three views: &lt;strong>structure&lt;/strong>, &lt;strong>interaction&lt;/strong>, and &lt;strong>behavior&lt;/strong>.&lt;/p>
&lt;h2 id="abstract-design">Abstract Design &lt;a href="#abstract-design" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="structure">Structure &lt;a href="#structure" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>The main domain concepts and events are presented hereafter and reified in the following classes structure, following the DDD building blocks.&lt;/p></description></item><item><title>Chat Service design</title><link>https://position-pal.github.io/docs/4-detailed-design/4-chat-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://position-pal.github.io/docs/4-detailed-design/4-chat-service/</guid><description>&lt;p>Chat service is responsible for managing the &lt;strong>communication between users in &lt;em>real-time&lt;/em>&lt;/strong>. This document describes the detailed design of the chat service, including its architecture, components, and interactions.&lt;/p>
&lt;h2 id="abstract-design">Abstract Design &lt;a href="#abstract-design" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Here are presented the main components of the chat service, we start describing the foundamental entities of the domain, then we move to the infrastructure layer, where we define the commands and events that will be used to interact with the domain entities.&lt;/p></description></item><item><title>Notification Service design</title><link>https://position-pal.github.io/docs/4-detailed-design/3-notification-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://position-pal.github.io/docs/4-detailed-design/3-notification-service/</guid><description>&lt;h2 id="structure">Structure &lt;a href="#structure" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;div style="width: 100%; overflow-x: auto; white-space: nowrap;">
 &lt;img 
 src="https://position-pal.github.io/res/notification-service-structure-light.svg" 
 alt="notification-service-structure schema" 
 style="max-width: 1100px;"
 class="schema"
 />
&lt;/div></description></item><item><title>Location Service implementation details</title><link>https://position-pal.github.io/docs/5-implementation/1-location-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://position-pal.github.io/docs/5-implementation/1-location-service/</guid><description>&lt;p>This chapter provides an overview of the implementation details of the &lt;strong>Location Service&lt;/strong>.&lt;/p>
&lt;h2 id="user-tracking-and-real-time-management">User Tracking and Real-time Management &lt;a href="#user-tracking-and-real-time-management" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The most important and critical feature of the Location Service is the &lt;strong>tracking&lt;/strong> of the user&amp;rsquo;s location and real-time management of their state considering the high volume of data that needs to be processed in real-time.
Moreover, the service is in charge of the user monitoring during the &lt;em>SOS&lt;/em> and &lt;em>Routing&lt;/em> modes, which require to take real-time actions to ensure the user&amp;rsquo;s safety.&lt;/p></description></item><item><title>Notification Service implementation details</title><link>https://position-pal.github.io/docs/5-implementation/2-notification-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://position-pal.github.io/docs/5-implementation/2-notification-service/</guid><description>&lt;h2 id="high-level-overview-and-modules-structure">High level overview and modules structure &lt;a href="#high-level-overview-and-modules-structure" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Currently, the only supported notification types are &lt;strong>push notifications&lt;/strong>, which are essential to guarantee that the client is immediately informed about groups changes or user state changes, like the trigger of the SOS alert or the journey start.&lt;/p>
&lt;!--

&lt;div style="width: 100%; overflow-x: auto; white-space: nowrap;">
 &lt;img 
 src="https://position-pal.github.io/res/repo-structure-light.svg" 
 alt="repo-structure schema" 
 style="max-width: 1100px;"
 class="schema"
 />
&lt;/div>


-->
&lt;h2 id="message-broker-mom">Message broker (&lt;code>:mom&lt;/code>) &lt;a href="#message-broker-mom" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Like already presented in the &lt;a href="">Architecture&lt;/a> section, the notification service is integrated with the message broker to receive notification commands from other microservices.&lt;/p></description></item><item><title>Chat Service implementation details</title><link>https://position-pal.github.io/docs/5-implementation/3-chat-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://position-pal.github.io/docs/5-implementation/3-chat-service/</guid><description>&lt;h2 id="chat-messaging-and-real-time-management">Chat Messaging and Real-time Management &lt;a href="#chat-messaging-and-real-time-management" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The primary functions of the chat service are to manage the &lt;em>chat groups&lt;/em> and the relative &lt;em>messages&lt;/em> that are exchanged between users of these groups.
In most of the cases the amount of messages exchanged is high, and the service needs to manage them in real-time with low latency of response.&lt;/p>
&lt;p>We built a &lt;strong>WebSocket-based&lt;/strong> communication system using an actor model. Specifically, we leveraged the &lt;strong>Event Sourcing&lt;/strong> module from the &lt;em>Akka framework&lt;/em> to handle Group instances. This approach treats Events as first-class citizens while maintaining consistent chat state.&lt;/p></description></item><item><title>Self Assessment and Validation</title><link>https://position-pal.github.io/docs/6-validation/validation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://position-pal.github.io/docs/6-validation/validation/</guid><description>&lt;p>Different types of &lt;em>automated&lt;/em> tests, at different granularity, are in place to ensure the correctness of the system, as well as the quality of the software product as a whole.&lt;/p>
&lt;p>The testing strategy follows &lt;a href="https://martinfowler.com/articles/practical-test-pyramid.html" rel="external" target="_blank">Martin Fowler’s Test Pyramid idea&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a>, which advocates for a higher number of low-level unit tests that are that are fast and cost-effective, complemented by fewer high-level integration and end-to-end tests that, while slower and more complex, validate the overall system&amp;rsquo;s functionalities.&lt;/p></description></item><item><title>DevOps</title><link>https://position-pal.github.io/docs/7-devops/devops/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://position-pal.github.io/docs/7-devops/devops/</guid><description>&lt;h2 id="build-automation">Build Automation &lt;a href="#build-automation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="scala-extras">Scala Extras &lt;a href="#scala-extras" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;h2 id="continuous-integration-and-delivery">Continuous Integration and Delivery &lt;a href="#continuous-integration-and-delivery" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;pre class="mermaid">graph TB;
 dispatcher([&amp;#34;0. dispatcher&amp;#34;])
 dispatcher --&amp;gt; build;
 build([&amp;#34;1. matrix build&amp;#34;]);
 dry-delivery([&amp;#34;2. dry delivery&amp;#34;])
 build --&amp;gt; dry-delivery;
 release([&amp;#34;3. release&amp;#34;])
 dry-delivery --&amp;gt; release;
 publish-images([&amp;#34;5. publish-images&amp;#34;])
 release --&amp;gt; publish-images;
 publish-doc([&amp;#34;4. publish-doc&amp;#34;])
 release --&amp;gt; publish-doc;
 success([&amp;#34;6. success&amp;#34;])
 build .-&amp;gt; success
 dry-delivery .-&amp;gt; success
 release .-&amp;gt; success
 publish-doc --&amp;gt; success
 publish-images --&amp;gt; success;
&lt;/pre>
&lt;h2 id="bots">Bots &lt;a href="#bots" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h2 id="continuous-deployment">Continuous Deployment &lt;a href="#continuous-deployment" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2></description></item></channel></rss>