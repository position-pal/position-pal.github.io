<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Architectural Design on PositionPal</title><link>https://position-pal.github.io/docs/3-arch-design/</link><description>Recent content in Architectural Design on PositionPal</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://position-pal.github.io/docs/3-arch-design/index.xml" rel="self" type="application/rss+xml"/><item><title>Bounded Contexts</title><link>https://position-pal.github.io/docs/3-arch-design/1-bounded-contexts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://position-pal.github.io/docs/3-arch-design/1-bounded-contexts/</guid><description>&lt;p>Following the event storming session, the subsequent bounded contexts have been identified:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Users Management&lt;/strong>: it is responsible for managing the users&amp;rsquo; lifecycle, from registration to deletion and the management of their profile information along with the authentication and authorization.&lt;/li>
&lt;li>&lt;strong>Groups Management&lt;/strong>: it is responsible for managing the groups&amp;rsquo; lifecycle, from creation to deletion, and the management of the group&amp;rsquo;s members.&lt;/li>
&lt;li>&lt;strong>Location Tracking&lt;/strong>: it is responsible for managing the location tracking of the users, including the sharing of the location with groups&amp;rsquo; members, the reception of location updates, thw sending of SOS alerts and the management of their paths.&lt;/li>
&lt;li>&lt;strong>Notifications&lt;/strong>: it is responsible for managing the notifications, including the push notifications to the users&amp;rsquo; devices.&lt;/li>
&lt;li>&lt;strong>Chat&lt;/strong>: it is responsible for managing the chat between the users and the groups&amp;rsquo; members.&lt;/li>
&lt;/ul>
&lt;p>In the following sections, we will provide a detailed view of each bounded context, including its &lt;strong>&lt;em>Ubiquitous Language&lt;/em>&lt;/strong>, the &lt;strong>&lt;em>Commands&lt;/em>&lt;/strong> and the &lt;strong>&lt;em>Events&lt;/em>&lt;/strong> guiding the interactions between the different contexts.
These can be categorized as &lt;strong>&lt;em>Driving&lt;/em>&lt;/strong> or &lt;strong>&lt;em>Driven Events&lt;/em>&lt;/strong>: the former are the events triggered by the user&amp;rsquo;s actions and that drives an application use case, while the latter are the events that are triggered by the system as a reaction to a use case or a system state change.
Moreover we distinguish between &lt;em>Commands&lt;/em> and &lt;em>Events&lt;/em> to highlight the difference between a request to perform an action (&lt;em>Command&lt;/em>) and the notification of something meaningful that has happened (&lt;em>Event&lt;/em>):&lt;/p></description></item><item><title>Architecture Design</title><link>https://position-pal.github.io/docs/3-arch-design/2-architecture-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://position-pal.github.io/docs/3-arch-design/2-architecture-design/</guid><description>&lt;p>Following the identification and definition of the quality attributes, a &lt;em>&lt;strong>microservice architecture&lt;/strong>&lt;/em> was chosen.
This is characterized by the decomposition of the system into a set of independent, and loosely coupled services, each of which is responsible for a specific business domain or functionality.
Indeed, the use of this architectural style enables the continuous delivery and deployment of large, complex applications, the ability to scale horizontally with ease, the possibility to use different technologies and programming languages for each service and an increase in the overall system&amp;rsquo;s maintainability.
Moreover it allows to isolate failures and to improve the fault tolerance of the system, hence gaining in reliability.&lt;/p></description></item><item><title>Architectural Patterns</title><link>https://position-pal.github.io/docs/3-arch-design/4-patterns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://position-pal.github.io/docs/3-arch-design/4-patterns/</guid><description>&lt;p>In this page are collected the used Microservice Architectural Pattern we used in the design of the system.&lt;/p>
&lt;h2 id="service-collaboration">Service collaboration &lt;a href="#service-collaboration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="database-per-service">&lt;a href="https://microservices.io/patterns/data/database-per-service.html" rel="external" target="_blank">Database per Service&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> &lt;a href="#database-per-service" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>Each microservice&amp;rsquo;s persistent data is private to that service and accessible only via its API.
More specifically, an approach where each microservice has &lt;strong>its own schema&lt;/strong> has been adopted, favoring &lt;em>data isolation&lt;/em>, making ownership of the data clearer and ensuring the services are &lt;em>loosely coupled&lt;/em>.&lt;/p></description></item></channel></rss>